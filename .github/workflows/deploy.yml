# Simple workflow for deploying static content to GitHub Pages
name: Deploy site

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  actions: read
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Exports the site
  deploy:
    name: "Export and Deploy"

    strategy:
      matrix:
        java: [21]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      KOBWEB_CLI_VERSION: 0.9.13

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setting up Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
          java-package: jdk
      - name: Set Up Gradle Wrapper
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-#{{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Query Browser Cache ID
        id: browser-cache-id
        run: echo "value=$(./gradlew -q :site:kobwebBrowserCacheId)" >> $GITHUB_OUTPUT
      - name: Cache Browser Dependencies
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.browser-cache-id.outputs.value }}
      - name: Fetch kobweb
        uses: robinraju/release-downloader@v1.9
        with:
          repository: "varabyte/kobweb-cli"
          tag: "v${{ env.KOBWEB_CLI_VERSION }}"
          fileName: "kobweb-${{ env.KOBWEB_CLI_VERSION }}.zip"
          tarBall: false
          zipBall: false
      - name: Unzip kobweb
        run: unzip kobweb-${{ env.KOBWEB_CLI_VERSION }}.zip
      - name: Run export
        working-directory: site
        run: ../kobweb-${{ env.KOBWEB_CLI_VERSION }}/bin/kobweb export --notty --layout static
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "site/.kobweb/site/"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4